[comment encoding = UTF-8 /]
[module entities('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[template public moduleMain(c : Class, path : String)]
[let filePath : String = path.concat(c.getName()+'/'+c.getName())]
    [c.genModule(filePath)/]
    [c.genService(filePath)/]
    [if (not c.isChild())]
    	[c.genCtrl(filePath)/]
    [/if]
[/let]
[/template]

[template protected genModule(c : Class, path : String)]
[file (path + '.mod.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[c.getModule() /]', ['['/]'ngCrud'[']'/]);

    mod.constant('[c.getContext()/]', '[c.getURI()/]');

    mod.constant('[c.getEntityModel()/]', {
        fields: ['['/][for (a : Property | c.getAllAttribs()) separator(', ')]{
                name: '[a.name/]',
                displayName: '[a.getDisplayName()/]',
                type: '[a.type.name/]',
                required: [a.isRequired()/]
            }[/for][if(c.hasReferences(false))], [for (a : Property | c.getReferences(false)) separator(', ')]{
                name: '[a.name/]',
                displayName: '[a.getDisplayName()/]',
                type: 'Reference',
                service: '[a.getClass().getService()/]',
                options: ['[]'/],
                required: [a.isRequired()/]
            }[/for][/if][']'/][if (c.isMaster())],
        childs: ['['/][for (a : Property | c.getCollectionAttributes()) separator(', ')]{
                name: '[a.name/]',
                displayName: '[a.getDisplayName()/]',
                //template: '', //override generic template
                ctrl: '[a.name/][a.getOtherEnd().name/]Ctrl',
                owned: [a.isComposite()/]
            }[/for]
        [']'/][/if]});
})(window.angular);
[/file]
[/template]

[template protected genCtrl(c : Class, path : String)]
[file (path + '.ctrl.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[c.getModule() /]');

    mod.controller('[c.getCtrl()/]', ['['/]'CrudCreator', '$scope', '[c.getService()/]', '[c.getEntityModel()/]', function (CrudCreator, $scope, svc, model) {
            CrudCreator.extendController(this, svc, $scope, model, '[c.getName()/]', '[c.getDisplayName()/]');
            [if (c.hasReferences(false))]
            this.loadRefOptions();
            [/if]
            this.fetchRecords();
        }[']'/]);
    [for (a : Property | c.getCollectionAttributes())]

    [if (a.isComposite())]	
    mod.controller('[a.name/][a.getOtherEnd().name/]Ctrl', ['['/]'CrudCreator', '$scope', '[a.getClass().getEntityModel()/]', function (CrudCreator, $scope, model) {
            CrudCreator.extendCompChildCtrl(this, $scope, model, '[a.name/]', '[a.getOtherEnd().name/]');
            [if (a.getClass().hasReferences(false))]
            this.loadRefOptions();
            [/if]
        }[']'/]);
    [else]	
    mod.controller('[a.name/][a.getOtherEnd().name/]Ctrl', ['['/]'CrudCreator', '$scope', '[a.getClass().getEntityModel()/]', '[a.getClass().getService()/]', function (CrudCreator, $scope, model, svc) {
            CrudCreator.extendAggChildCtrl(this, $scope, model, '[a.name/]', svc);
            [if (a.getClass().hasReferences(false))]
            this.loadRefOptions();
            [/if]
        }[']'/]);
    [/if]
    [/for]
})(window.angular);
[/file]
[/template]

[template protected genService(c : Class, path : String)]
[file (path.concat('.svc.js'), false, 'UTF-8')]
(function(ng){
    var mod = ng.module('[c.getModule() /]');

    mod.service('[c.getService()/]', ['['/]'CrudCreator','[c.getContext()/]', function(CrudCreator, context){
            CrudCreator.extendService(this, context);
    }[']'/]);
})(window.angular);
[/file]
[/template]