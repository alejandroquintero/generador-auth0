[comment encoding = UTF-8 /]
[module index('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[template public indexMain(m : Model, path : String)]
[m.appjs(path.concat('src/'))/]
[m.index(path)/]
[/template]

[template private getAPIURL(m : Model)]
http://localhost:8080/[m.getApiArtifactId()/]/api/
[/template]

[template protected appjs(m : Model, path : String)]
[file (path.concat('app.js'), false, 'UTF-8')]
/*
[m.license()/]
*/
(function (ng) {
    var mod = ng.module('mainApp', ['['/]
        //'ngCrudMock',
        [for (c : Class | m.getClasses())]
        '[c.getModule()/]',
        [/for]
        'authModule',
        'ui.router',
        'ngCrud'
    [']'/]);

    mod.config(['['/]'$logProvider', function ($logProvider) {
            $logProvider.debugEnabled(true);
        }[']'/]);

    mod.config(['['/]'RestangularProvider', function (rp) {
            rp.setBaseUrl('[m.getAPIURL()/]');
        }[']'/]);

    mod.config(['['/]'$urlRouterProvider', function ($urlRouterProvider) {
                $urlRouterProvider.otherwise('/');
        }[']'/]);

    mod.config(['['/]'authServiceProvider', function (auth) {
            auth.setValues({
                apiUrl: '[m.getAPIURL()/]users/',
                successState: '[m.getClasses()->any(1=1).getName()/]'
            });
        }[']'/]);
})(window.angular);
[/file]
[/template]

[template protected index(m : Model, path : String)]
[file (path.concat('index.html'), false, 'UTF-8')]
<!DOCTYPE html>
<!--
[m.license()/]
-->
<html ng-app="mainApp">
    <head>
        <title>[m.name/]</title>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <!-- build:css(<%= meta.src %>) styles/vendor.css -->
        <!-- bower:css -->
        <!-- endbower -->
        <!-- endbuild -->

        <!-- build:css(<%= meta.src %>) styles/main.css -->
        <!-- include: "type": "css", "files": "<%= meta.includeCssFiles %>" -->
        <!-- /include -->
        <!-- endbuild -->

        <!-- build:js(<%= meta.src %>) scripts/vendor.js -->
        <!-- bower:js -->
        <!-- endbower -->
        <!-- endbuild -->

        <!-- build:js(<%= meta.src %>) scripts/scripts.js -->
        <!-- include: "type": "js", "files": "<%= meta.includeJsFiles %>" -->
        <!-- /include -->
        <!-- endbuild -->

    </head>
    <body style="padding-top: 60px;">
        <div class="container-fluid">
            <div class="col-md-12">
                <nav class="navbar navbar-default navbar-fixed-top" role="navigation">
                    <div class="container-fluid">
                        <!-- Brand and toggle get grouped for better mobile display -->
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#main-bar">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <a class="navbar-brand" href>[m.name/]</a>
                        </div>

                        <!-- Collect the nav links, forms, and other content for toggling -->
                        <div class="collapse navbar-collapse" id="main-bar">
                            <ul class="nav navbar-nav">
                                [for (c : Class | m.getRootClasses())]
                                <li><a ui-sref="[c.getName()/]">[c.getDisplayName()/]</a></li>
                                [/for]
                            </ul>
                            <ul class="nav navbar-nav navbar-right">
                                <login-button></login-button>
                            </ul>
                        </div> <!-- /.navbar-collapse -->
                    </div> <!-- /.container-fluid -->
                </nav>
            </div>
            <div ui-view="mainView"></div>
        </div>
    </body>
</html>
[/file]
[/template]

[template protected getDisplayName(c : Class)]
[c.name.asDisplayName()/]
[/template]