[comment encoding = UTF-8 /]
[**
 * The documentation of the module pom.
 */]
[module pom('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[**
 * The documentation of the template mainPOM.
 * @param aModel
 */]
[template public mainPOM(m : Model)]
[let path : String = m.getApiArtifactId().concat('/')]
    [m.genWebPOM(path)/]
    [m.genLicense(path)/]
[/let]
[/template]

[**
 * POM del proyecto API
*/]
[template protected genWebPOM(m : Model, path : String)]
[file (path.concat('pom.xml'), false, 'UTF-8')]
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>[m.getApiArtifactId()/]</artifactId>
    <name>[m.getApiProjectName()/]</name>
    <packaging>war</packaging>
    <parent>
        <groupId>[m.baseGroup()/]</groupId>
        <artifactId>[m.getArtifactId()/]</artifactId>
        <version>[m.getProjectVersion()/]</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <licenses>
        <license>
            <name>MIT License</name>
            <comments>See file LICENSE</comments>
        </license>
    </licenses>
    <dependencies>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <version>2.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>[m.getCSWGroupId()/]</groupId>
            <artifactId>[m.getAuthLibArtifactId()/]</artifactId>
            <version>[m.getAuthLibVersion()/]</version>
        </dependency>
        <dependency>
            <groupId>[m.baseGroup()/]</groupId>
            <artifactId>[m.getLogicArtifactId()/]</artifactId>
            <version>[m.getProjectVersion()/]</version>
        </dependency>
    </dependencies>
</project>
[/file]
[/template]
[**
 * Generaci√≥n de licencia para proyecto API
*/]
[template protected genLicense(m : Model, path : String)]
[file (path.concat('LICENSE'), false, 'UTF-8')]
[m.license()/]
[/file]
[/template]