[comment encoding = UTF-8 /]
[module services('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[template public mainJersey(c : Class, path : String)]
[let filePath : String = path.concat('services/')]
    [c.restClass(filePath)/]
[/let]
[/template]

[template protected restClass(c : Class, path : String) {className : String = c.getJaxRsName(); logic : String = c.getName().concat('Logic');}]
[file (path.concat(className+'.java'), false, 'UTF-8')]
package [c.getModel().baseGroup()/].services;

import [c.getModel().baseGroup()/].api.[c.getAPIName()/];
import [c.getModel().baseGroup()/].dtos.[c.getDTOName()/];
import co.edu.uniandes.csw.auth.provider.StatusCreated;
import java.util.List;
import javax.inject.Inject;
import javax.servlet.http.HttpServletResponse;
import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;

/**
 * @generated
 */
@Path("/[c.getURI()/]")
@Consumes(MediaType.APPLICATION_JSON)
@Produces(MediaType.APPLICATION_JSON)
public class [className/] {

    @Inject private [c.getAPIName()/] [logic/];
    @Context private HttpServletResponse response;
    @QueryParam("page") private Integer page;
    @QueryParam("maxRecords") private Integer maxRecords;

    /**
     * @generated
     */
    @GET
    public List<[c.getDTOName()/]> get[c.name/]s() {
        if (page != null && maxRecords != null) {
            this.response.setIntHeader("X-Total-Count", [logic/].count[c.name/]s());
        }
        return [logic/].get[c.name/]s(page, maxRecords);
    }

    /**
     * @generated
     */
    @GET
    @Path("{id: \\d+}")
    public [c.getDTOName()/] get[c.name/](@PathParam("id") Long id) {
        return [logic/].get[c.name/](id);
    }

    /**
     * @generated
     */
    @POST
    @StatusCreated
    public [c.getDTOName()/] create[c.name/]([c.getDTOName()/] dto) {
        return [logic/].create[c.name/](dto);
    }

    /**
     * @generated
     */
    @PUT
    @Path("{id: \\d+}")
    public [c.getDTOName()/] update[c.name/](@PathParam("id") Long id, [c.getDTOName()/] dto) {
        dto.setId(id);
        return [logic/].update[c.name/](dto);
    }

    /**
     * @generated
     */
    @DELETE
    @Path("{id: \\d+}")
    public void delete[c.name/](@PathParam("id") Long id) {
        [logic/].delete[c.name/](id);
    }
}
[/file]
[/template]