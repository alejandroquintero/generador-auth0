[comment encoding = UTF-8 /]
[**
 * The documentation of the module docs.
 */]
[module docs('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[**
 * The documentation of the template mainDocs.
 * @param aModel
 */]
[template public mainDocs(m : Model)]
[m.genReadMe()/]
[/template]

[template protected genReadMe(m : Model)]
[file ('README.md', false, 'UTF-8')]
# Tabla de contenidos
-  ['['/]Introducci√≥n[']'/](#introducci√≥n)
-  ['['/]API[']'/](#api-de-la-aplicaci√≥n-[m.name.toLowerCase()/])
[for (c : Class | m.getClasses())]
[if (not c.isChild())]
  - ['['/]Recurso [c.name+']'/](#recurso-[c.name.toLowerCase()/])
    - ['['/]GET /[c.getURI()/][']'/](#GET-/[c.getURI()/])
    - ['['/]GET /[c.getURI()/]/{id}[']'/](#GET-/[c.getURI()/]/{id})
    - ['['/]POST /[c.getURI()/][']'/](#POST-/[c.getURI()/])
    - ['['/]PUT /[c.getURI()/]/{id}[']'/](#PUT-/[c.getURI()/]/{id})
    - ['['/]DELETE /[c.getURI()/]/{id}[']'/](#DELETE-/[c.getURI()/]/{id})
[for (elem : Property | c.getNonCompositeCollectionAttributes())]
    - ['['/]GET [c.getURI()/]/{[c.getURI()/]id}/[elem.name/][']'/](#GET-[c.getURI()/]/{[c.getURI()/]id}/[elem.name/])
    - ['['/]GET [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}[']'/](#GET-[c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id})
    - ['['/]POST [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}[']'/](#POST-[c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id})
    - ['['/]PUT [c.getURI()/]/{[c.getURI()/]id}/[elem.name/][']'/](#PUT-[c.getURI()/]/{[c.getURI()/]id}/[elem.name/])
    - ['['/]DELETE [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}[']'/](#DELETE-[c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}[']'/])
[/for]
[/if]
[/for]

# API Rest
## Introducci√≥n
La comunicaci√≥n entre cliente y servidor se realiza intercambiando objetos JSON. Para cada entidad se hace un mapeo a JSON, donde cada uno de sus atributos se transforma en una propiedad de un objeto JSON. Todos los servicios se generan en la URL /[m.getApiProjectName()/]/api/. Por defecto, todas las entidades tienen un atributo `id`, con el cual se identifica cada registro:

```javascript
{
    id: '',
    attribute_1: '',
    attribute_2: '',
    ...
    attribute_n: ''
}
```

Cuando se transmite informaci√≥n sobre un registro espec√≠fico, se realiza enviando un objeto con la estructura mencionada en la secci√≥n anterior.
La √∫nica excepci√≥n se presenta al solicitar al servidor una lista de los registros en la base de datos, que incluye informaci√≥n adicional para manejar paginaci√≥n de lado del servidor en el header `X-Total-Count` y los registros se env√≠an en el cuerpo del mensaje como un arreglo.

La respuesta del servidor al solicitar una colecci√≥n presenta el siguiente formato:

```javascript
['['/]{}, {}, {}, {}, {}, {}[']'/]
```

## API de la aplicaci√≥n [m.name/]
[for(c : Class | m.getClasses()) ]
[if (not c.isChild())]
### Recurso [c.name/]
[if (c.hasReferences(false) and c.hasCompositeAssociations())]
El objeto [c.name/] tiene 3 representaciones JSON:
[elseif (c.hasReferences(false) or c.hasCompositeAssociations())]
El objeto [c.name/] tiene 2 representaciones JSON:	
[/if]

#### Representaci√≥n Minimum
```javascript
{
    [for(a : Property | c.allAttributes()) separator(',\n')]
    [ a.name /]: '' /*Tipo [ a.type.name /]*/[/for]

}
```

[if (c.hasReferences(false))]
#### Representaci√≥n Basic
```javascript
{
    // todo lo de la representaci√≥n Minimum m√°s los objetos Minimum con relaci√≥n simple.
    [for(a : Property | c.getReferences(false)) separator(',\n')]
    [ a.name /]: {
    [for(a2 : Property | a.getClass().allAttributes()) separator(',\n')]
    [ a2.name /]: '' /*Tipo [ a2.type.name /]*/[/for]
    }[/for]

}
```
[/if]

[if (c.hasCompositeAssociations())]
#### Representaci√≥n Full
```javascript
{
    // todo lo de la representaci√≥n Basic m√°s la collecci√≥n de los objetos de relaciones composite.
    [for(a : Property | c.getCompositeCollectionAttributes()) separator(',\n')]
    [ a.name /]: ['['/]{
    [for(a2 : Property | a.getClass().allAttributes()) separator(',\n')]
    [ a2.name /]: '' /*Tipo [ a2.type.name /]*/[/for]
    }[']'/][/for]

}
```
[/if]


#### GET /[c.getURI()/]

Retorna una colecci√≥n de objetos [c.name/] en representaci√≥n Basic.
[if (c.hasReferences(false))] 
Cada [c.name/] en la colecci√≥n tiene embebidos su objetos [for(a : Property | c.getReferences(false)) separator(', ')][ a.name /][/for].
[/if]

#### Par√°metros

#### N/A

#### Respuesta

C√≥digo|Descripci√≥n|Cuerpo
:--|:--|:--
200|OK|Colecci√≥n de ['['/]representaciones Basic[']'/](#recurso-[c.name.toLowerCase()/])
409|Un objeto relacionado no existe|Mensaje de error
500|Error interno|Mensaje de error

#### GET /[c.getURI()/]/{id}

Retorna una colecci√≥n de objetos [c.name/] en representaci√≥n Full.
[if (c.hasReferences(false))] 
Cada [c.name/] en la colecci√≥n tiene embebidos su objetos [for(a : Property | c.getReferences(false)) separator(', ')][ a.name /][/for] [for(a : Property | c.getCompositeCollectionAttributes()) before(' y sus colecciones ') separator(', ')][ a.name /][/for].
[/if]
[if (c.hasCompositeAssociations())] 
Cada [c.name/] en la colecci√≥n tiene embebidos su objetos con relaciones composite [for(a : Property | c.getCompositeCollectionAttributes()) separator(', ')][ a.name /][/for].
[/if]

#### Par√°metros

Nombre|Ubicaci√≥n|Descripci√≥n|Requerido|Esquema
:--|:--|:--|:--|:--
id|Path|ID del objeto [c.name/] a consultar|S√|Integer

#### Respuesta

C√≥digo|Descripci√≥n|Cuerpo
:--|:--|:--
200|OK|Objeto [c.name/] en ['['/]representaciones Full[']'/](#recurso-[c.name.toLowerCase()/])
404|No existe un objeto [c.name/] con el ID solicitado|Mensaje de error
500|Error interno|Mensaje de error

#### POST /[c.getURI()/]

Es el encargado de crear objetos [c.name/].
[if (c.hasCompositeAssociations())] 
[for(a : Property | c.getCompositeCollectionAttributes())]
Dado que [ a.name /] es una clase hija de [c.name/] a trav√©s de una relaci√≥n composite, este servicio tambi√©n permite la creaci√≥n de [ a.name /]s asociados con un [c.name/].
[/for].
[/if]

#### Par√°metros

Nombre|Ubicaci√≥n|Descripci√≥n|Requerido|Esquema
:--|:--|:--|:--|:--
body|body|Objeto [c.name/] que ser· creado|S√|['['/]Representaci√≥n Full[']'/](#recurso-[c.name.toLowerCase()/])

#### Respuesta

C√≥digo|Descripci√≥n|Cuerpo
:--|:--|:--
201|El objeto [c.name/] ha sido creado|['['/]Representaci√≥n Full[']'/](#recurso-[c.name.toLowerCase()/])
409|Un objeto relacionado no existe|Mensaje de error
500|No se pudo crear el objeto [c.name/]|Mensaje de error

#### PUT /[c.getURI()/]/{id}

Es el encargado de actualizar objetos [c.name/].
[if (c.hasCompositeAssociations())] 
[for(a : Property | c.getCompositeCollectionAttributes())]
Dado que [ a.name /] es una clase hija de [c.name/] a trav√©s de una relaci√≥n composite, este servicio tambi√©n permite la actualizaci√≥n de [ a.name /]s asociados con un [c.name/].
[/for].
[/if]

#### Par√°metros

Nombre|Ubicaci√≥n|Descripci√≥n|Requerido|Esquema
:--|:--|:--|:--|:--
id|Path|ID del objeto [c.name/] a actualizar|S√|Integer
body|body|Objeto [c.name/] nuevo|S√|['['/]Representaci√≥n Full[']'/](#recurso-[c.name.toLowerCase()/])

#### Respuesta

C√≥digo|Descripci√≥n|Cuerpo
:--|:--|:--
201|El objeto [c.name/] actualizado|['['/]Representaci√≥n Full[']'/](#recurso-[c.name.toLowerCase()/])
409|Un objeto relacionado no existe|Mensaje de error
500|No se pudo actualizar el objeto [c.name/]|Mensaje de error

#### DELETE /[c.getURI()/]/{id}

Elimina un objeto [c.name/].

#### Par√°metros

Nombre|Ubicaci√≥n|Descripci√≥n|Requerido|Esquema
:--|:--|:--|:--|:--
id|Path|ID del objeto [c.name/] a eliminar|S√|Integer

#### Respuesta

C√≥digo|Descripci√≥n|Cuerpo
:--|:--|:--
204|Objeto eliminado|N/A
500|Error interno|Mensaje de error

[for (elem : Property | c.getNonCompositeCollectionAttributes())]
#### GET [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]
#### GET [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}
#### POST [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}
#### PUT [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]
#### DELETE [c.getURI()/]/{[c.getURI()/]id}/[elem.name/]/{[elem.name/]id}
[/for]

#### Servicios
M√©todo|URI|Acci√≥n|Par√°metros|Cuerpo|Retorno
:--:|:--:|:--:|:--:|:--:|:--:
**GET**|/[c.getURI()/]|Lista los registros de [c.name/] (READ)|**@QueryParam page**: p√°gina a consultar<br>**@QueryParam maxRecords**: cantidad de registros a consultar<br><br>*Si se omite alguno de estos par√°metros se obtiene todos los registros en la base de datos*||Colecci√≥n de registros de [c.name/] y el total de registros en la base de datos en el header X-Total-Count
**GET**|/[c.getURI()/]/*:[c.getURI()/]id*|Obtener los atributos de una instancia de [c.name/] (READ)|**@PathParam [c.getURI()/]id**: Identificador del registro||Atributos de la instancia de [c.name/]
**POST**|/[c.getURI()/]|Crear una nueva instancia de la entidad [c.name/] (CREATE)||Atributos de la instancia de [c.name/] a crear|Instancia de [c.name/] creada, incluyendo su nuevo ID
**PUT**|/[c.getURI()/]/*:[c.getURI()/]id*|Actualiza una instancia de la entidad [c.name/] (UPDATE)|**@PathParam [c.getURI()/]id**: Identificador del registro|Objeto JSON de [c.name/]|Instancia de [c.name/] actualizada
**DELETE**|/[c.getURI()/]/*:[c.getURI()/]id*|Borra instancia de [c.name/] en el servidor (DELETE)|**@PathParam [c.getURI()/]id**: Identificador del registro||
[for (elem : Property | c.getNonCompositeCollectionAttributes())]
**GET**|[c.getURI()/]/*:[c.getURI()/]id*/[elem.name/]|Listar registros de [elem.name/] ([elem.getClass().name/]) asociados a [c.name/]|**@PathParam [c.getURI()/]id**: Identificador de instancia de [c.name/]||Colecci√≥n de objetos JSON de [elem.name/]([elem.getClass().name/])
**GET**|[c.getURI()/]/*:[c.getURI()/]id*/[elem.name/]/*:[elem.name/]id*|Obtener un registro de [elem.name/] ([elem.getClass().name/]) asociado a [c.name/]|**@PathParam [c.getURI()/]id**: Identificador de instancia de [c.name/]<br><br>**@PathParam [elem.name/]id**: Identificador de instancia de [elem.getClass().name/]||Lista de registros de [elem.name/]([elem.getClass().name/])
**POST**|[c.getURI()/]/*:[c.getURI()/]id*/[elem.name/]/*:[elem.name/]id*|Asocia una instancia de [elem.getClass().name/] a una de [c.name/]|**@PathParam [c.getURI()/]id**: Identificador de instancia de [c.name/]<br><br>**@PathParam [elem.name/]id**: Identificador de instancia de [elem.getClass().name/]|Registro de [elem.name/]([elem.getClass().name/]) para asociar a [c.name/]|Instancia de [elem.name/]([elem.getClass().name/]) asociada a instancia de [c.name/]
**PUT**|[c.getURI()/]/*:[c.getURI()/]id*/[elem.name/]|Actualizaci√≥n de instancias de [elem.name/] ([elem.getClass().name/]) asociadas a [c.name/]|**@PathParam [c.getURI()/]id**: Identificador de instancia de [c.name/]|Colecci√≥n de instancias de [elem.name/]([elem.getClass().name/]) a actualizar|Colecci√≥n de instancias de [elem.name/]([elem.getClass().name/]) actualizados
**DELETE**|[c.getURI()/]/*:[c.getURI()/]id*/[elem.name/]/*:[elem.name/]id*|Remueve asociaci√≥n de instancias de [elem.name/] ([elem.getClass().name/]) a [c.name/]|**@PathParam [c.getURI()/]id**: Identificador de instancia de [c.name/]<br><br>**@PathParam [elem.name/]id**: Identificador de instancia de [elem.getClass().name/]|Colecci√≥n de atributo `id` de [elem.name/]([elem.getClass().name/]) a eliminar|
[/for]

['['/]Volver arriba[']'/](#tabla-de-contenidos)
[/if]
[/for]
[/file]
[/template]