[comment encoding = UTF-8 /]
[module utils('http://www.eclipse.org/uml2/5.0.0/UML')]

[query public getAllAttribs(c : Class) : OrderedSet(Property) = 
c.allAttributes()->select( a | a.name <> 'id')
/]

[query public getId(c : Class) : Property = c.allAttributes()->select( a | a.name = 'id')->first() /]

[query public getClasses(m : Model) : OrderedSet(Class) =
m.packagedElement->filter(Class)->sortedBy(c | c.name)
/]

[query public isMaster(c : Class) : Boolean =
c.getAssociations()->select(asc | asc.getAllAttributes()->select(a | a.isNavigable() and a.getUpper() < 0 and a.getOtherEnd().type = c)->notEmpty())->notEmpty()
/]

[query public getChildProperty(asc : Association, c : Class) : Set(Property) =
asc.getAllAttributes()->select(a | a.isNavigable() and a.getUpper() < 0 and a.getOtherEnd().type = c)
/]

[query public getAttributesWithRef(c : Class) : OrderedSet(Property) = 
c.allAttributes()->union(c.refAttributes())->asOrderedSet()
/]

[query public refAttributes(c : Class) : Set(Property) = 
c.getAssociations()->collect(getAllAttributes()->select(a | a.isNavigable() and a.getUpper() > 0 and a.getOtherEnd().type = c))->flatten()->asSet()
/]

[query public getCompositeAssociations(c : Class) : Set(Association) =
c.getAssociations()->select(
    asc | asc.getAllAttributes()->select(
        a | a.isNavigable() and a.getUpper() < 0 and a.getOtherEnd().type = c and a.isComposite()
    )->notEmpty()
)
/]

[query public getSharedAssociations(c : Class) : Set(Association) =
c.getAssociations()->select(
    asc | asc.getAllAttributes()->select(
        a | a.isNavigable() and a.getUpper() < 0 and a.getOtherEnd().type = c and not a.isComposite()
    )->notEmpty()
)
/]

[query public hasCompositeAssociations(c : Class) : Boolean =
c.getAssociations()->select(
    asc | asc.getAllAttributes()->select(
        a | a.isNavigable() and a.getUpper() < 0 and a.getOtherEnd().type = c and a.isComposite()
    )->notEmpty()
)->notEmpty()
/]

[query public hasSharedAssociations(c : Class) : Boolean =
c.getAssociations()->select(
    asc | asc.getAllAttributes()->select(
        a | a.isNavigable() and a.getUpper() < 0 and a.getOtherEnd().type = c and not a.isComposite()
    )->notEmpty()
)->notEmpty()
/]

[template public getModelName(c : Class)]
[c.getModel().name/]
[/template]

[template public getCtrl(c : Class)]
[c.name.toLowerFirst().concat('Ctrl')/]
[/template]

[template public getService(c : Class)]
[c.name.toLowerFirst().concat('Service')/]
[/template]

[template public getEntityModel(c : Class)]
[c.name.toLowerFirst().concat('Model')/]
[/template]

[template public getModule(c : Class)]
[c.name.toLowerFirst().concat('Module')/]
[/template]

[template public getContext(c : Class)]
[c.name.toLowerFirst().concat('Context')/]
[/template]

[template public getURI(c : Class)]
[c.name.toLowerFirst().concat('s')/]
[/template]

[template public getName(c : Class)]
[c.name.toLowerFirst()/]
[/template]

[template public getDisplayName(c : Class)]
[c.name/]
[/template]

[template public getDTOName(c : Class)]
[c.name.toUpperFirst().concat('DTO')/]
[/template]

[template public getJaxRsName(c : Class)]
[c.name.concat('Service')/]
[/template]

[template public getAPIName(c : Class)]
['I'.concat(c.name).concat('Logic')/]
[/template]

[template public baseGroup(m : Model)]
['co.edu.uniandes.csw.'.concat(m.name.toLowerCase())/]
[/template]

[template public basePath(m : Model)]
['/src/main/java/'.concat(m.baseGroup().replaceAll('[.]', '/')).concat('/')/]
[/template]

[template public basePck(c : Class, suffix : String)]
[c.getModel().baseGroup().concat('.'+c.name.toLowerFirst()).concat(suffix)/]
[/template]

[template public getBackendProjectName(m : Model)]
[m.name.concat('.logic')/]
[/template]

[template public getWebProjectName(m : Model)]
[m.name.concat('.web')/]
[/template]

[template public getWebRoot(m : Model)]
[m.getWebProjectName().concat('/src/main/webapp/')/]
[/template]

[template public getPoolName(m : Model)]
[m.name.concat('_pool')/]
[/template]

[template public getJNDIName(m : Model)]
['java:app/jdbc/'.concat(m.name)/]
[/template]

[template public getPUName(m : Model)]
[m.name.concat('PU')/]
[/template]

[template public getMetaInfPath(m : Model)]
[m.getBackendProjectName().concat('/src/main/resources/META-INF/')/]
[/template]