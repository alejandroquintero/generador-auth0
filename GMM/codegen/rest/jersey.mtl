[comment encoding = UTF-8 /]
[module jersey('http://www.eclipse.org/uml2/5.0.0/UML')]
[import rest /]
[import utils /]

[template public restMain(c : Class, path : String)]
[c.restClass(path)/]
[/template]

[template public restClass(c : Class, path : String)]
[file (path, false, 'UTF-8')]
package [c.basePck('')/].service;

import java.util.List;

import javax.ws.rs.*;
import javax.inject.Inject;

import [c.basePck('')/].logic.api.I[c.name/]LogicService;;


public abstract class _[c.name/]Service {

    @Inject
    protected I[c.name/]LogicService [c.name.toLowerFirst()/]LogicService;
    
    @POST
    public [c.getDTOName()/] create[c.name/]([c.getDTOName()/] [c.name.toLowerFirst() /]){
        return [c.name.toLowerFirst()/]LogicService.create[c.name/]([c.name.toLowerFirst() /]);
    }
    
    @DELETE
    @Path("{id}")
    public void delete[c.name/](@PathParam("id") Long id){
        [c.name.toLowerFirst()/]LogicService.delete[c.name/](id);
    }
    
    @GET
    public [c.getPageName()/] get[c.name/]s(@QueryParam("page") Integer page, @QueryParam("maxRecords") Integer maxRecords){
        return [c.name.toLowerFirst()/]LogicService.get[c.name/]s(page, maxRecords);
    }
    
    @GET
    @Path("{id}")
    public [c.getDTOName()/] get[c.name/](@PathParam("id") Long id){
        return [c.name.toLowerFirst()/]LogicService.get[c.name/](id);
    }
    
    @PUT
    @Path("{id}")
    public void update[c.name/](@PathParam("id") Long id, [c.getDTOName()/] [c.name.toLowerFirst() /]){
        [c.name.toLowerFirst()/]LogicService.update[c.name/]([c.name.toLowerFirst() /]);
    }   
}
[/file]
[/template]