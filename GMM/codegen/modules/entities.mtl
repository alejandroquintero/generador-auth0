[comment encoding = UTF-8 /]
[module entities('http://www.eclipse.org/uml2/5.0.0/UML')]
[import utils /]

[template public moduleMain(c : Class, path : String)]
[let filePath : String = path.concat(c.name.toLowerFirst()+'/'+c.name.toLowerFirst())]
	[c.genModule(filePath)/]
	[c.genCtrl(filePath)/]
	[c.genView(filePath)/]
    [c.genService(filePath)/]
[/let]
[/template]

[template public genModule(c : Class, path : String)]
[let mod : String = c.name.toLowerFirst().concat('Module')]
[file (path + '.mod.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[mod /]', ['['/]'CrudModule'[']'/]);

    mod.constant('[c.name.toLowerFirst()/].context', '[c.name.toLowerFirst()+'s'/]');

    mod.constant('[c.name.toLowerFirst()/]Model', ['['/]
        [for (a : Property | c.getAllAttribs()) separator(', ')]
        {
            name: '[a.name/]',
            displayName: '[a.name.toUpperFirst()/]',
            type: '[a.type.name/]'
        }[/for]
    [']'/]);
})(window.angular);
[/file]
[/let]
[/template] 

[template public genCtrl(c : Class, path : String)]
[let mod : String = c.name.toLowerFirst().concat('Module')]
[file (path + '.ctrl.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[mod /]');

    mod.controller('[c.name.toLowerFirst()/]Ctrl', ['['/]'$scope', '[c.name.toLowerFirst()/]Service', function ($scope, [c.name.toLowerFirst()/]Service) {
            [c.name.toLowerFirst()/]Service.extendCtrl(this, $scope);
            this.fetchRecords();
        }[']'/]);
})(window.angular);
[/file]
[/let]
[/template]

[template public genService(c : Class, path : String)]
[file (path.concat('.svc.js'), false, 'UTF-8')]
[let mod : String = c.name.toLowerFirst().concat('Module')]
(function(angular){
    var mod = angular.module('[mod /]');
    
    mod.service('[c.name.toLowerFirst()/]Service', ['['/]'CRUDBase','[c.name.toLowerFirst()/].context', function(CRUDBase, context){
            CRUDBase.extendService(this, context);
    }[']'/]);
})(window.angular);
[/let]
[/file]
[/template]

[template public genView(c : Class, path : String)]
[let ctrl : String = c.name.toLowerFirst().concat('Ctrl')]
[file (path + '.tpl.html', false, 'UTF-8')]
<toolbar name="[c.name.toLowerFirst()/]" display-name="[c.name/]" actions="[ctrl/].globalActions"></toolbar>
<div ng-hide="[ctrl/].editMode">
    <list-records
        model="model"
        records="records"
        actions="[ctrl/].recordActions">
    </list-records>
    <pagination total-items="[ctrl/].totalItems" ng-model="[ctrl/].currentPage" ng-change="[ctrl/].pageChanged()" items-per-page="[ctrl/].itemsPerPage" max-size="[ctrl/].maxSize" class="pagination-sm" boundary-links="true" rotate="false"></pagination>
</div>
<div ng-show="[ctrl/].editMode">
	<form name="[c.name.toLowerFirst()/]Form" role="form">
        <input id="id" class="form-control" type="hidden" ng-model="currentRecord.id"/>			
        [for (a : Property | c.getAllAttribs())]
		[if (a.type.name = 'String')]
		<div class="form-group">
			<label for="[a.name/]">[a.name.toUpperFirst()/]</label>
			<input id="[a.name/]" class="form-control" type="text" ng-model="currentRecord.[a.name/]"/>
		</div>
		[/if]
		[if (a.type.name = 'Long' or a.type.name = 'Integer')]
		<div class="form-group">
			<label for="[a.name/]">[a.name.toUpperFirst()/]</label>
			<input id="[a.name/]" class="form-control" type="number" ng-model="currentRecord.[a.name/]"/>
		</div>
		[/if]
		[if (a.type.name = 'Date')]
		<div class="form-group">
			<label for="[a.name/]">[a.name.toUpperFirst()/]</label>
			<input id="[a.name/]" class="form-control" type="date" ng-model="currentRecord.[a.name/]"/>
		</div>
		[/if]
		[if (a.type.name = 'Boolean')]
		<div class="form-group" >
		    <label>
	    	  <input id="[a.name/]" name="[a.name/]" ng-value="false" type="checkbox" ng-model="currentRecord.[a.name/]"> [a.name.toUpperFirst()/]
	    	</label>
		</div>
		[/if]
		[/for]
	</form>
</div>
[/file]
[/let]
[/template]