[comment encoding = UTF-8 /]
[module entities('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]
[import frontend::entities::masterModule /]

[template public moduleMain(c : Class, path : String)]
[let filePath : String = path.concat(c.getName()+'/'+c.getName())]
[if (c.isChild())]
    [c.genModule(filePath)/]
[elseif (c.isMaster())]
    [c.mainMasterModule(filePath)/]
[else]
	[c.genModule(filePath)/]
    [c.genCtrl(filePath)/]
    [c.genService(filePath)/]
[/if]
[/let]
[/template]

[template protected genModule(c : Class, path : String)]
[file (path + '.mod.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[c.getModule() /]', ['['/]'CrudModule'[']'/]);

    mod.constant('[c.getContext()/]', '[c.getURI()/]');

    mod.constant('[c.getEntityModel()/]', ['['/][for (a : Property | c.getAllAttribs()) separator(', ')]{
            name: '[a.name/]',
            displayName: '[a.getDisplayName()/]',
            type: '[a.type.name/]',
            required: [a.isRequired()/]
        }[/for][if(c.hasReferences(false))], [for (a : Property | c.getReferences(false)) separator(', ')]{
            name: '[a.name/]',
            displayName: '[a.getDisplayName()/]',
            type: 'Reference',
            service: '[a.getClass().getService()/]',
            options: ['[]'/],
            required: [a.isRequired()/]
        }[/for][/if][']'/]);
})(window.angular);
[/file]
[/template] 

[template protected genCtrl(c : Class, path : String)]
[file (path + '.ctrl.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[c.getModule() /]');

    mod.controller('[c.getCtrl()/]', ['['/]'$scope', '[c.getService()/]', '[c.getEntityModel()/]', function ($scope, svc, model) {
            svc.extendController(this, $scope, model, '[c.getName()/]', '[c.getDisplayName()/]');
            [if (c.hasReferences(false))]
            this.loadRefOptions();
            [/if]
            this.fetchRecords();
        }[']'/]);
})(window.angular);
[/file]
[/template]

[template protected genService(c : Class, path : String)]
[file (path.concat('.svc.js'), false, 'UTF-8')]
(function(ng){
    var mod = ng.module('[c.getModule() /]');
    
    mod.service('[c.getService()/]', ['['/]'CRUDBase','[c.getContext()/]', function(CRUDBase, context){
            CRUDBase.extendService(this, context);
    }[']'/]);
})(window.angular);
[/file]
[/template]