[comment encoding = UTF-8 /]
[module entities('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[template public moduleMain(c : Class, path : String)]
[let filePath : String = path.concat(c.getName()+'/'+c.getName())]
    [c.genModule(filePath)/]
    [c.genService(filePath)/]

    [if (c.isMaster())]
        [c.genMasterTemplate(filePath)/]
    [/if]

    [if (not c.isChild())]
    	[c.genCtrl(filePath)/]
    [/if]
[/let]
[/template]

[template protected genModule(c : Class, path : String)]
[file (path + '.mod.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[c.getModule() /]', ['['/]'ngCrud'[']'/]);

    mod.constant('[c.getContext()/]', '[c.getURI()/]');

    mod.constant('[c.getEntityModel()/]', ['['/][for (a : Property | c.getAllAttribs()) separator(', ')]{
            name: '[a.name/]',
            displayName: '[a.getDisplayName()/]',
            type: '[a.type.name/]',
            required: [a.isRequired()/]
        }[/for][if(c.hasReferences(false))], [for (a : Property | c.getReferences(false)) separator(', ')]{
            name: '[a.name/]',
            displayName: '[a.getDisplayName()/]',
            type: 'Reference',
            service: '[a.getClass().getService()/]',
            options: ['[]'/],
            required: [a.isRequired()/]
        }[/for][/if][']'/]);
})(window.angular);
[/file]
[/template] 

[template protected genCtrl(c : Class, path : String)]
[file (path + '.ctrl.js', false, 'UTF-8')]
(function (ng) {
    var mod = ng.module('[c.getModule() /]');

    mod.controller('[c.getCtrl()/]', ['['/]'CrudCreator', '$scope', '[c.getService()/]', '[c.getEntityModel()/]', function (CrudCreator, $scope, svc, model) {
            CrudCreator.extendController(this, svc, $scope, model, '[c.getName()/]', '[c.getDisplayName()/]');
            [if (c.hasReferences(false))]
            this.loadRefOptions();
            [/if]
            this.fetchRecords();
        }[']'/]);
    [if (c.isMaster())]
    [for (asc : Association | c.getCompositeAssociations())]

    [let el : Property = asc.getChildProperty(c)]
    mod.controller('[el.name/]Ctrl', ['['/]'CrudCreator', '$scope', '[el.getClass().getEntityModel()/]', function (CrudCreator, $scope, model) {
            CrudCreator.extendCompChildCtrl(this, $scope, model, '[el.name/]', '[el.getOtherEnd().name/]');
            [if (el.getClass().hasReferences(false))]
            this.loadRefOptions();
            [/if]
        }[']'/]);
    [/let]
    [/for]
    [for (asc : Association | c.getSharedAssociations())]

    [let el : Property = asc.getChildProperty(c)]
    mod.controller('[el.name/]Ctrl', ['['/]'CrudCreator', '$scope', '[el.getClass().getEntityModel()/]', '[el.getClass().getService()/]', function (CrudCreator, $scope, model, svc) {
            CrudCreator.extendAggChildCtrl(this, $scope, model, '[el.name/]', svc);
            [if (el.getClass().hasReferences(false))]
            this.loadRefOptions();
            [/if]
        }[']'/]);
    [/let]
    [/for]
    [/if]
})(window.angular);
[/file]
[/template]

[template protected genService(c : Class, path : String)]
[file (path.concat('.svc.js'), false, 'UTF-8')]
(function(ng){
    var mod = ng.module('[c.getModule() /]');
    
    mod.service('[c.getService()/]', ['['/]'CrudCreator','[c.getContext()/]', function(CrudCreator, context){
            CrudCreator.extendService(this, context);
    }[']'/]);
})(window.angular);
[/file]
[/template]

[template protected genMasterTemplate(c : Class, path : String)]
[file (path.concat('.tpl.html'), false, 'UTF-8')]
<div ng-include="ctrl.tpl"></div>
<div id="childs" ng-show="ctrl.editMode">
    <ul class="nav nav-tabs">
        [for (asc : Association | c.getMasterAssociations())]
        [let el : Property = asc.getChildProperty(c)]
        <li role="presentation" ng-class="{active: tab === '[el.name/]'}"><a href ng-click="ctrl.changeTab('[el.name/]')">[el.getDisplayName()/]</a></li>
        [/let]
        [/for]
    </ul>
    [for (asc : Association | c.getMasterAssociations())]
    [let el : Property = asc.getChildProperty(c)]
    <div ng-show="tab === '[el.name/]'" ng-controller="[el.name/]Ctrl as ctrl" ng-include="ctrl.tpl"></div>
    [/let]
    [/for]
</div>
[/file]
[/template]