[comment encoding = UTF-8 /]
[module logic('http://www.eclipse.org/uml2/5.0.0/UML')]
[import ::utils /]

[template public mainLogic(c : Class, path : String)]
[c.genLogicInterface(path.concat('api/'))/]
[c.genLogicBean(path.concat('ejbs/'))/]
[/template]

[template protected genLogicInterface(c : Class, path : String) {className : String = c.getAPIName();}]
[file (path.concat(className + '.java'), false, 'UTF-8')]
package [c.getModel().baseGroup()/].api;

import [c.getModel().baseGroup()/].dtos.[c.getDTOName()/];
import java.util.List;

public interface [className/] {
    public int count[c.name/]s();
    public List<[c.getDTOName()/]> get[c.name/]s(Integer page, Integer maxRecords);
    public [c.getDTOName()/] get[c.name/](Long id);
    public [c.getDTOName()/] create[c.name/]([c.getDTOName()/] dto);
    public [c.getDTOName()/] update[c.name/]([c.getDTOName()/] dto);
    public void delete[c.name/](Long id);
}
[/file]
[/template]

[template protected genLogicBean(c : Class, path : String) {className : String = c.getBeanName();}]
[file (path.concat(className.concat('.java')), false, 'UTF-8')]
package [c.getModel().baseGroup()/].ejbs;

import [c.getModel().baseGroup()/].api.[c.getAPIName()/];
import [c.getModel().baseGroup()/].converters.[c.getConverterName()/];
import [c.getModel().baseGroup()/].dtos.[c.getDTOName()/];
import [c.getModel().baseGroup()/].entities.[c.getEntityName()/];
import [c.getModel().baseGroup()/].persistence.[c.getPersistenceName()/];
import java.util.List;
import javax.ejb.Stateless;
import javax.inject.Inject;

/**
 * @generated
 */
@Stateless
public class [className/] implements [c.getAPIName()/] {

    @Inject private [c.getPersistenceName()/] persistence;

    /**
     * @generated
     */
    public int count[c.name/]s() {
        return persistence.count();
    }

    /**
     * @generated
     */
    public List<[c.getDTOName()/]> get[c.name/]s(Integer page, Integer maxRecords) {
        return [c.getConverterName()/].listEntity2DTO(persistence.findAll(page, maxRecords));
    }

    /**
     * @generated
     */
    public [c.getDTOName()/] get[c.name/](Long id) {
        return [c.getConverterName()/].fullEntity2DTO(persistence.find(id));
    }

    /**
     * @generated
     */
    public [c.getDTOName()/] create[c.name/]([c.getDTOName()/] dto) {
        [c.getEntityName()/] entity = [c.getConverterName()/].fullDTO2Entity(dto);
        persistence.create(entity);
        return [c.getConverterName()/].fullEntity2DTO(entity);
    }

    /**
     * @generated
     */
    public [c.getDTOName()/] update[c.name/]([c.getDTOName()/] dto) {
        [c.getEntityName()/] entity = persistence.update([c.getConverterName()/].fullDTO2Entity(dto));
        return [c.getConverterName()/].fullEntity2DTO(entity);
    }

    /**
     * @generated
     */
    public void delete[c.name/](Long id) {
        persistence.delete(id);
    }
}
[/file]
[/template]